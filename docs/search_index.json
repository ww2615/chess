[["index.html", "Chess Game Analysis Chapter 1 Introduction 1.1 Background 1.2 Introductory Chess Knowledge 1.3 Specific Libraries Used", " Chess Game Analysis Ju Hyun Jeon Freddy Wong 2021-12-02 Chapter 1 Introduction 1.1 Background Chess is one of the most popular games in the world which could be dated back to the 15th century. In todays world, more than millions of people played everyday. According to a press release by AGON, 605 million adults play chess regularly, which is comparable to the number of regular users of Facebook. Thanks to the two biggest platforms for online chess, Chess and Lichess, either new players or experienced players could match-make with people with similar skill levels. While the rules for chess is simple and easy to learn, it is all about thinking and strategy. The number of ways to play go exponential after each move. 400 possible setup exist after one move by each player and there are 197742 possible game after the second round of move. The possible number of game goes up to 121 million after the three pair of moves which is why it is always a popular topic for ai research company. For this project, we took advantage of the open database of Lichess.org that provides up to 1 billion games of data per month to analyze and discover insightful takeaways for future researchers on this topic. 1.2 Introductory Chess Knowledge As most chess games do, online chess is also played in a specific time format. You are givena specific amount of time and have to make moves within that time. If your time reaches 0, you immediately lose. Time formats are usually notated in the form a + b where a is the time you start with and b is the time you get after every move also called increment. There are also classification for chess moves. In this project, we will be mostly dealing with bad moves which classify into 3 categories, dubious, mistake, and blunder. Dubious moves are objectively bad but possibly have some merits. Mistakes are bad moves that should not have been played. Blunders are bad mistakes that end up in a loss of material or in a mating sequence. Dubious Move Mistake Blunder 1.3 Specific Libraries Used 1.3.1 Rchess A package developed by Joshua Kunst that wraps the chess.js javascript library and the chessboardjs library for analyzing chess move, piece movement and check detection. For more info, please visit: {https://www.github.com/jbkunst/rchess} "],["data-sources.html", "Chapter 2 Data sources 2.1 Chess game notations 2.2 Choosing the right data 2.3 Lichess Game Data Format 2.4 Missing Data 2.5 Moves Data 2.6 600+0 Data", " Chapter 2 Data sources 2.1 Chess game notations Chess positions can be stored in one of two formats: PGNs or FENs. PGN (Portable Game Format) is often used when people write down moves from the start of the game. PGN can also include data such as event names, players, ELO, and results. FEN (Forsyth-Edwards Notation) is a simplified shorter notation that can describe one position. FEN has the disadvantage of not being able to encode data outside of chess position such as move order, player names, ELO, and results. In this project, we will be following chess games from the start of the game thus will be using the PGN format as the base format. The following encode the same chess game or chess position. 2.1.1 Image of the position Sample Position 2.1.2 - Sample PGN [Event EDAV chess tournament] [Site Columbia University, NYC] [Date December 1st] [Round 1] [White student A] [Black student B] [Result 1-0] e4 1e5 2.Nf3 2Nc6 1-0 2.1.3 - Sample FEN r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3 2.2 Choosing the right data There are many online data sets that include chess PGN. For instance, CRAN Project RChess has its data set chesswc which is a collection of chess games from the FIDE World Cup 2011, 2013, and 2015. However, for the purpose of our project, there were a specific set of requirements that had to be sufficed: Sufficient amount of chess games Evaluation of every move Clock after every move The First requirement is relatively simple to achieve. However, very few chess data sets include computer evaluation and clock time in their PGNs. The second and third requirements are not part of the original PGN notation making it the limiting factor for our choice of data set. We decided to use the data from lichess database. The project decided to use the October 2021 games that included 88,092,721 games played online in lichess.org. Some of the games in the database encoded evaluation and clock time after every move. 2.3 Lichess Game Data Format lichess_db_standard_rated_2021-10.pgn Total 88,092,721 games. The file can be downloaded from database.lichess.org. The file is a list of PGNs without index. All of the following data sets are results of organizing this data. Not all games from the database is guaranteed to have [%clk] or [%eval] which are the clock time and the evaluation of the position. According to the Lichess database, around 6% of the games are annotated with evaluation. The following is a sample PGN format Lichess uses. [Event Rated Bullet game] [Site https://lichess.org/NRafdioG] [Date 2021.10.01] [Round -] [White xtzdavi182] [Black al_fatih] [Result 1-0] [UTCDate 2021.10.01] [UTCTime 00:00:14] [WhiteElo 1703] [BlackElo 1698] [WhiteRatingDiff +6] [BlackRatingDiff -6] [ECO B50] [Opening Sicilian Defense: Modern Variations] [TimeControl 60+0] [Termination Time forfeit] e4 { [%clk 0:01:00] } 1 c5 { [%clk 0:01:00] } 2. Nf3 { [%clk 0:01:00] } 2 d6 { [%clk 0:00:59] } 3. b3 { [%clk 0:01:00] } 3 Nc6 { [%clk 0:00:58] } 4. Bb2 { [%clk 0:01:00] } 4 Nf6 { [%clk 0:00:58] } 5. Bb5 { [%clk 0:00:59] } 5 Bd7 { [%clk 0:00:56] } 6. O-O { [%clk 0:00:59] } 6 a6 { [%clk 0:00:55] } 7. Bxc6 { [%clk 0:00:58] } 7 Bxc6 { [%clk 0:00:55] } 8. Re1 { [%clk 0:00:58] } 8 g6 { [%clk 0:00:55] } 9. h3 { [%clk 0:00:58] } 9 Bg7 { [%clk 0:00:54] } 10. d3 { [%clk 0:00:57] } 10 O-O { [%clk 0:00:53] } 11. Nbd2 { [%clk 0:00:57] } 11 b5 { [%clk 0:00:51] } 12. Rb1 { [%clk 0:00:57] } 12 Re8 { [%clk 0:00:51] } 13. c4 { [%clk 0:00:57] } 13 b4 { [%clk 0:00:49] } 14. a3 { [%clk 0:00:56] } 14 a5 { [%clk 0:00:47] } 15. axb4 { [%clk 0:00:55] } 15 cxb4 { [%clk 0:00:47] } 16. Ra1 { [%clk 0:00:55] } 16 Qb6 { [%clk 0:00:45] } 17. Bd4 { [%clk 0:00:53] } 17 Qc7 { [%clk 0:00:43] } 18. e5 { [%clk 0:00:51] } 18 dxe5 { [%clk 0:00:42] } 19. Nxe5 { [%clk 0:00:51] } 19 Bb7 { [%clk 0:00:39] } 20. Qc2 { [%clk 0:00:44] } 20 Rad8 { [%clk 0:00:38] } 21. Be3 { [%clk 0:00:42] } 21 Nd5 { [%clk 0:00:31] } 22. Nef3 { [%clk 0:00:40] } 22 Nxe3 { [%clk 0:00:29] } 23. Rxe3 { [%clk 0:00:40] } 23 Qd6 { [%clk 0:00:25] } 24. Rae1 { [%clk 0:00:39] } 24 e6 { [%clk 0:00:23] } 25. d4 { [%clk 0:00:38] } 25 Bxf3 { [%clk 0:00:18] } 26. Nxf3 { [%clk 0:00:37] } 26 Rc8 { [%clk 0:00:14] } 27. c5 { [%clk 0:00:34] } 27 Qd5 { [%clk 0:00:11] } 28. Rd3 { [%clk 0:00:32] } 28 Red8 { [%clk 0:00:10] } 29. Re5 { [%clk 0:00:31] } 29 Qc6 { [%clk 0:00:07] } 30. Ree3 { [%clk 0:00:29] } 30 Qb5 { [%clk 0:00:06] } 31. Qe2 { [%clk 0:00:27] } 31 Rc7 { [%clk 0:00:04] } 32. Rxe6 { [%clk 0:00:26] } 32 fxe6 { [%clk 0:00:03] } 33. Qxe6+ { [%clk 0:00:26] } 1-0 2.4 Missing Data data_index.csv index from 1 - 9 10,000,000 lines per csv. Total 88,092,721 lines. The data_index.csv was created to understand which data was missing in the original data. The columns of the data was constructed as following. Column Name Description Result Result of the game (chr) ex) 1-0 UTCDate UTC date of the game (chr) ex) 2021.10.01 UTCTime UTC time of the game (num) ex) 00:00:14 WhiteElo White players Elo in Lichess (num) BlackElo Black players Elo in Lichess (num) WhiteRatingDiff Change in White players Elo after the game (num) BlackRatingDiff Change in Black players Elo after the game (num) ECO Encyclopedia of Chess Openings. The Opening that was played in the game (chr) ex) B50 TimeControl The time format in which the game was played. (chr) ex) 10 minutes + 5 second increment = 600+5 Termination How the game ended (chr) ex) Normal(checkmate or resignation), Abandoned(player left the game), Time Forfeit (player ran out of time) Evaluation Whether or not the game was annotated (chr) ex) Yes, No 2.5 Moves Data moves_index.csv index from 1 - 93 5,000,000 lines per csv. Total 464,436,334 lines. The moves_index.csv was created to format the data move by move. The columns of the data was constructed as following. Column Name Description Result Result of the game (chr) ex) 1-0 WhiteElo White players Elo in Lichess (num) BlackElo Black players Elo in Lichess (num) ECO Encyclopedia of Chess Openings. The Opening that was played in the game (chr) ex) B50 TimeControl The time format in which the game was played. (chr) ex) 10 minutes + 5 second increment = 600+5 Termination How the game ended (chr) ex) Normal(checkmate or resignation), Abandoned(player left the game), Time Forfeit (player ran out of time) Color The color of the player that made the move (chr) ex) w or b MoveNum The number of the move (num) Move The algebraic notation of the move made (chr) ex) Qh4 Type One of the seven types of move: blunder, mistake, dubious, normal, interesting, good, and brilliant (chr) Eval Computer evaluation after the move (chr) ex) 0.07 or #2(mate in 2 for white) EvalDiff The change in evaluation. It is 0 when the previous or current evaluation was forced mate (#number) (num) Time Time left for the player (num) ex) 0:01:50 TimeSpent Time spent on the move (num) ex) 0:00:02 2.6 600+0 Data 600+0_index.csv index from 1 - 16 5,000,000 lines per csv. Total 78,867,621 lines. The 600+0_index.csv was created to work with a manageable size of data. The columns of the data was identical to moves_index.csv. "],["data-transformation.html", "Chapter 3 Data transformation 3.1 Understanding the Raw Data 3.2 Formatting the Raw Data 3.3 Focusing on 600+0 data", " Chapter 3 Data transformation 3.1 Understanding the Raw Data The raw data was in a zipped format of .pgn.bz2. The unzipped .pgn file was then converted through read.py. The result of this transformation was named data_index.csv each constituting of 10,000,000 lines. Naturally, there were 9 files since the total count of games in the original data was 88,092,721. Each row represented a game with columns. This data_index.csv was only generated to answer the following questions. What items are missing in the original data? How much games were annotated? The answer to the first question will be answered in the next chapter. From the data, we deduced that 7,142,630 / 88,092,721 = 8.1 % of the games were annotated compared to the 6 % claimed on the website. 3.2 Formatting the Raw Data We decided to focus on the 7,142,630 games that were annotated. The first formatting process was done using eval.py. This process was different from the read.py that the resulting csv(pgn_index.csv) from eval.py contained the PGN descriptions of every game played. This process was conducted to generate a working csv dataset independent from the original data set. The second formatting process used edit.py. The formatting process intended to change each row to moves instead of games. The missing data of this csv data set will be examined in the next chapter. 464,436,334 annotated moves have been played but this data set was impossible to work with. We decided to focus on the most popular time control format 600 + 0 or 10 minutes with no increment. This time format is 16.91 % of all games. The timecount.csv was generated through count.py. By choosing this time format, we were able to conduct a deeper analysis on the relationship between time and bad moves. 3.3 Focusing on 600+0 data We can run a weighted t-test and chi-square test on the Elo of players Both results show that the mean of both data is the same and the data are dependent The elocount.csv and elo600count.csv was generated through count.py. ## $test ## [1] &quot;Two Sample Weighted T-Test (Welch)&quot; ## ## $coefficients ## t.value df p.value ## -0.0866588 55.2709206 0.9312559 ## ## $additional ## Difference Mean.x Mean.y Std. Err ## -8.984344 1647.843875 1656.828220 103.674924 ## ## Pearson&#39;s Chi-squared test ## ## data: df0$count and df1$count ## X-squared = 667, df = 598, p-value = 0.02605 The following is the histogram and boxplots of the Elo distribution of all annotated games compared to 600+0 annotated games. It is clear that 600+0 is a good representation of the players playing in lichess.org. The analysis will be based on the more manageable 600+0 dataset. "],["missing-values.html", "Chapter 4 Missing values 4.1 Missing Values from Original Data 4.2 Missing Values of Generated Data", " Chapter 4 Missing values 4.1 Missing Values from Original Data The following graph was generated by using the dataset data_index.csv. The code for generating the following graphs can be accessed in plot.R and MissingDataMultiple.R. Missing Data Plot for Original PGN data 4.2 Missing Values of Generated Data From reading the graph that run through one of the data set, we found that there are two columns that have missing data pattern. They were the WhiteELOdiff and the BlackElodiff Columns. However, these two columns were not crucial in any of our analysis since the change of elo after the game and the elo system is none of our concern. As a result, the data set itself was complete and created no hardships. Missing Data Plot for moves.csv Missing Data Plot for 600.csv "],["results.html", "Chapter 5 Results", " Chapter 5 Results "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
